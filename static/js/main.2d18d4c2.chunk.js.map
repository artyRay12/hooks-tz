{"version":3,"sources":["Reducer/userReducer.jsx","route/ProtectedRoute.jsx","hooks/useFetch.js","hooks/useLocalStorage.js","Pages/LoginPage/login_config.js","Pages/LoginPage/LoginPage.jsx","Components/Table/TableRow.jsx","Components/Table/Table.jsx","Components/SearchPanel/SearchPanel.jsx","Components/Preloader/Preloader.jsx","Pages/TablePage/TablePage.jsx","App.js","index.js"],"names":["initialState","token","localStorage","getItem","data","userReducer","state","action","type","payload","UserContext","createContext","UserContextProvider","children","value","useReducer","Provider","ProtectedRoute","props","useContext","to","url","useState","isLoading","setIsLoading","response","setResponse","error","setError","options","setOptions","key","initialValue","setValue","useEffect","setItem","useLocalStorage","Axios","then","catch","err","USER_REG","PASSWORD_REG","createChecker","reg","test","LoginPage","username","setUsername","password","setPassword","usernameError","setusernameError","passwordError","setPasswordError","isSuccessfullSubmit","setisSuccessfullSubmit","dispatch","useFetch","doFetch","userCheck","passwordCheck","console","log","className","onSubmit","e","preventDefault","method","placeholder","onChange","target","class","autoComplete","disabled","TableRow","item","first_name","id","last_name","scope","Table","onSort","onClick","slice","map","ind","SearchPanel","onFilterChange","Preloader","params","TablePage","sortType","setSortType","filter","setFilter","headers","Authorization","filteredContacts","contact","indexOf","newFilterText","fieldName","arr","sort","x","y","App","path","component","exact","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.2d18d4c2.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\nexport const initialState = {\r\n    token: localStorage.getItem(\"token\") || null,\r\n    data: [],\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_TOKEN\":\r\n            return {\r\n                ...state,\r\n                token: action.payload,\r\n            };\r\n        case \"SET_USERS\":\r\n            if (!action.payload) {\r\n                return;\r\n            }\r\n            return {\r\n                ...state,\r\n                data: [...action.payload],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserContextProvider = ({ children }) => {\r\n    const value = useReducer(userReducer, initialState);\r\n\r\n    return (\r\n        <UserContext.Provider value={value}>{children}</UserContext.Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../Reducer/userReducer\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const ProtectedRoute = (props) => {\r\n    const [{ token }] = useContext(UserContext);\r\n\r\n    if (token) {\r\n        return <Route {...props} />;\r\n    } else {\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nexport default (url) => {\r\n    const baseUrl = \"http://emphasoft-test-assignment.herokuapp.com\";\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [options, setOptions] = useState({});\r\n\r\n    const [token] = useLocalStorage(\"token\");\r\n\r\n    const doFetch = (options = {}) => {\r\n        setOptions(options);\r\n        setIsLoading(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) return;\r\n\r\n        Axios(`${baseUrl}${url}`, options)\r\n            .then((response) => {\r\n                setIsLoading(false);\r\n                setResponse(response.data);\r\n            })\r\n            .catch((err) => {\r\n                setIsLoading(false);\r\n                setError(err);\r\n            });\r\n    }, [token, response, url, isLoading, options]);\r\n\r\n    return [{ isLoading, response, error }, doFetch];\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default (key, initialValue = \"\") => {\r\n    const [value, setValue] = useState(() => {\r\n        return localStorage.getItem(key) || initialValue;\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key, value);\r\n    }, [value, key]);\r\n\r\n    return [value, setValue];\r\n};\r\n","export const USER_REG = /^[\\w\\d\\@\\-\\+]{1,150}$/;\r\nexport const PASSWORD_REG = /^(?=.*[A-Z])(?=.*\\d).{8,128}$/;\r\n\r\nexport const USERNAME_ERROR_MESSAGE =\r\n    \"Username should atleast 1 letter, and you can use '@' '+' '-' '_'\";\r\nexport const PASSWORD_ERROR_MESSAGE =\r\n    \"Password must contain at least one uppercase letter and number, and 8chars min\";\r\nexport const SERVER_ERROR =\r\n    \"Your username or password is invalid\";\r\n\r\nexport const createChecker = (reg) => {\r\n    return (value) => reg.test(value);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { UserContext } from \"../../Reducer/userReducer\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useContext } from \"react\";\r\nimport \"./login.css\";\r\nimport {\r\n    USER_REG,\r\n    PASSWORD_REG,\r\n    createChecker,\r\n    USERNAME_ERROR_MESSAGE,\r\n    PASSWORD_ERROR_MESSAGE,\r\n    SERVER_ERROR,\r\n} from \"./login_config\";\r\n\r\nconst LoginPage = () => {\r\n    const [username, setUsername] = useState(\"test_super\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [usernameError, setusernameError] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n\r\n    const [isSuccessfullSubmit, setisSuccessfullSubmit] = useState(false);\r\n    const [, dispatch] = useContext(UserContext);\r\n    const [{ isLoading, response, error }, doFetch] = useFetch(\r\n        \"/api-token-auth/\"\r\n    );\r\n\r\n    const userCheck = createChecker(USER_REG);\r\n    const passwordCheck = createChecker(PASSWORD_REG);\r\n\r\n    const check = () => {\r\n        console.log(`username ${userCheck(username)}`);\r\n        console.log(`password ${passwordCheck(password)}`);\r\n\r\n        if (!userCheck(username)) {\r\n            setusernameError(true);\r\n        } else {\r\n            setusernameError(false);\r\n        }\r\n\r\n        if (!passwordCheck(password)) {\r\n            setPasswordError(true);\r\n        } else {\r\n            setPasswordError(false);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        check(username, password);\r\n        if (usernameError && passwordError) {\r\n            return;\r\n        }\r\n\r\n        doFetch({\r\n            method: \"post\",\r\n            data: {\r\n                username,\r\n                password,\r\n            },\r\n        });\r\n    };\r\n    console.log(usernameError + \"    \" + passwordError);\r\n\r\n    useEffect(() => {\r\n        if (!response) return;\r\n\r\n        dispatch({ type: \"SET_TOKEN\", payload: response.token });\r\n        localStorage.setItem(\"token\", response.token);\r\n        setisSuccessfullSubmit(true);\r\n    }, [response, dispatch]);\r\n\r\n    if (isSuccessfullSubmit) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n                    <h1 className=\"text-xs-center login-title\">Login</h1>\r\n                    <form action=\"\" onSubmit={handleSubmit}>\r\n                        <fieldset className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control form-control-lg form-input\"\r\n                                placeholder=\"username\"\r\n                                value={username}\r\n                                onChange={(e) => {\r\n                                    setUsername(e.target.value);\r\n                                }}\r\n                            />\r\n                        </fieldset>\r\n\r\n                        <div class=\"error-text\">\r\n                            <p>{usernameError && USERNAME_ERROR_MESSAGE}</p>\r\n                        </div>\r\n                        <fieldset className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control form-control-lg form-input\"\r\n                                autoComplete=\"current-pass\"\r\n                                placeholder=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </fieldset>\r\n                        <div class=\"error-text\">\r\n                            <p>{passwordError && PASSWORD_ERROR_MESSAGE}</p>\r\n                            <p>\r\n                                {error &&\r\n                                    !passwordError &&\r\n                                    !usernameError &&\r\n                                    SERVER_ERROR}\r\n                            </p>\r\n                        </div>\r\n                        <button\r\n                            className=\"btn btn-outline-light btn-lg login-btn\"\r\n                            type=\"submit\"\r\n                            disabled={isLoading}\r\n                        >\r\n                            Enter\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport './tableRow.css'\r\n\r\nexport const TableRow = ({ item }) => {\r\n    const { first_name, id, last_name, username } = item;\r\n\r\n    return (\r\n        <tr>\r\n            <th className=\"row-item\" scope=\"row\">\r\n                {id}\r\n            </th>\r\n            <td className=\"row-item\">{username}</td>\r\n            <td className=\"row-item\">{first_name}</td>\r\n            <td className=\"row-item\">{last_name}</td>\r\n        </tr>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { TableRow } from \"./TableRow\";\r\nimport \"./table.css\";\r\n\r\nconst Table = ({ onSort, data }) => {\r\n    console.log(\"render\");\r\n    return (\r\n        <div className=\"table-responsive-lg table-responsive-md table-responsive-sm\">\r\n            <table className=\"table table-dark\">\r\n                <caption>List of users</caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\" onClick={() => onSort(\"id\")}>\r\n                            id\r\n                        </th>\r\n                        <th scope=\"col\" onClick={() => onSort(\"username\")}>\r\n                            user name\r\n                        </th>\r\n                        <th scope=\"col\" onClick={() => onSort(\"first_name\")}>\r\n                            first name\r\n                        </th>\r\n                        <th scope=\"col\" onClick={() => onSort(\"last_name\")}>\r\n                            last name\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.slice(1, 100).map((item, ind) => {\r\n                        return <TableRow item={item} key={item.id} />;\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst SearchPanel = ({ onFilterChange }) => {\r\n    const [value, setValue] = useState(\"\");\r\n    onFilterChange(value);\r\n\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            className=\"form-control form-control-lg search-input mb-4\"\r\n            placeholder=\"filter by username\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default SearchPanel;\r\n","import React from \"react\";\r\n//import preloader from './../../assets/preloader/preloader.svg'\r\nimport './preloader.css'\r\n\r\nconst Preloader = (params) => {\r\n    return (\r\n        <div class=\"lds-hourglass\"></div>\r\n    );\r\n};\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport Table from \"../../Components/Table/Table\";\r\nimport SearchPanel from \"../../Components/SearchPanel/SearchPanel\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../../Reducer/userReducer\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Preloader from \"../../Components/Preloader/Preloader\";\r\n\r\nconst TablePage = () => {\r\n    const [sortType, setSortType] = useState(\"ASC\");\r\n    const [{ token, data }, dispatch] = useContext(UserContext);\r\n    const [{ isLoading, response }, doFetch] = useFetch(\"/api/v1/users/\");\r\n    const [filter, setFilter] = useState(\"\");\r\n\r\n    const onFilterChange = (newFilterText) => {\r\n        setFilter(newFilterText);\r\n    };\r\n\r\n    useEffect(() => {\r\n        doFetch({\r\n            method: \"get\",\r\n            headers: {\r\n                Authorization: `Token ${token}`,\r\n            },\r\n        });\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        if (!response) return;\r\n        dispatch({ type: \"SET_USERS\", payload: response });\r\n    }, [response, dispatch]);\r\n\r\n    const onSort = (fieldName) => {\r\n        const arr = [...data];\r\n        sortType === \"ASC\" ? setSortType(\"DESC\") : setSortType(\"ASC\");\r\n\r\n        if (sortType === \"ASC\")\r\n            arr.sort((x, y) => (x[fieldName] > y[fieldName] ? 1 : -1));\r\n        else arr.sort((x, y) => (x[fieldName] < y[fieldName] ? 1 : -1));\r\n\r\n        dispatch({ type: \"SET_USERS\", payload: arr });\r\n    };\r\n\r\n    let filteredContacts = data.filter((contact) => {\r\n        return contact.username.indexOf(filter) !== -1;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <SearchPanel onFilterChange={onFilterChange} />\r\n            {!isLoading ? (\r\n                <Table\r\n                    data={filter === \"\" ? data : filteredContacts}\r\n                    onSort={onSort}\r\n                />\r\n            ) : (\r\n                <Preloader />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TablePage;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { ProtectedRoute } from \"./route/ProtectedRoute\";\nimport LoginPage from \"./Pages/LoginPage/LoginPage\";\nimport TablePage from \"./Pages/TablePage/TablePage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n                Какая то жопа\n                <Switch>\n                    <ProtectedRoute path=\"/\" component={TablePage} exact />\n                    <Route path=\"/login/\" component={LoginPage} />\n                </Switch>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { UserContextProvider } from \"./Reducer/userReducer\";\n\nReactDOM.render(\n    <UserContextProvider>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App />\n        </BrowserRouter>\n    </UserContextProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}